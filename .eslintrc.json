{
  "parser": "@typescript-eslint/parser",
  "root": true,
  "parserOptions": {
    //"tsconfigRootDir": "__dirname",
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "env": {
    "browser": true,
    "es6": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "airbnb",
    "prettier"
  ],
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-native",
    "functional"
  ],
  "globals": {
    "fetch": true,
    "JSX": "readonly",
    "__DEV__": "readonly"
  },
  "overrides": [
    {
      "files": [
        "**/*.tsx"
      ],
      "rules": {
        "react/prop-types": "off",
        "import/no-extraneous-dependencies": "off"
      }
    }
  ],
  "ignorePatterns": [
    "src/@types/*"
  ],
  "rules": {
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "ts": "never",
        "tsx": "never",
        "js": "never",
        "jsx": "never",
        "mjs": "never"
      }
    ],
    "linebreak-style": [
      2,
      "unix"
    ],
    "semi": [
      2,
      "always"
    ],
    "no-console": 1,
    "max-len": [
      1,
      {
        "code": 120,
        "tabWidth": 4,
        "ignoreStrings": true
      }
    ],
    "comma-dangle": [
      2,
      "always-multiline"
    ],
    "no-cond-assign": [
      2,
      "always"
    ],
    "no-ex-assign": 2,
    "global-require": "off",
    "arrow-body-style": 0,
    "class-methods-use-this": 0,
    "max-depth": [
      2,
      5
    ],
    "complexity": 0,
    "prefer-const": 0,
    "no-trailing-spaces": [
      2,
      {
        "skipBlankLines": false
      }
    ],
    "one-var": [
      2,
      "never"
    ],
    "func-names": 2,
    "key-spacing": [
      2,
      {
        "beforeColon": false,
        "afterColon": true
      }
    ],
    "max-nested-callbacks": [
      2,
      4
    ],
    "new-cap": 0,
    "new-parens": 2,
    "no-mixed-spaces-and-tabs": 2,
    "no-multiple-empty-lines": [
      1,
      {
        "max": 1
      }
    ],
    "no-nested-ternary": 0,
    "no-new-object": 2,
    "no-spaced-func": 2,
    "arrow-spacing": [
      2,
      {
        "before": true,
        "after": true
      }
    ],
    "operator-assignment": [
      2,
      "always"
    ],
    "keyword-spacing": [
      2,
      {
        "before": true,
        "after": true
      }
    ],
    "space-before-blocks": [
      2,
      "always"
    ],
    "object-curly-spacing": [
      2,
      "never"
    ],
    "array-bracket-spacing": [
      2,
      "never"
    ],
    "computed-property-spacing": [
      2,
      "never"
    ],
    "space-in-parens": [
      2,
      "never"
    ],
    "space-infix-ops": [
      2,
      {
        "int32Hint": true
      }
    ],
    "space-unary-ops": [
      2,
      {
        "words": true,
        "nonwords": false
      }
    ],
    "no-delete-var": 2,
    "no-underscore-dangle": 0,
    "no-shadow-restricted-names": 2,
    "no-undef-init": 2,
    "no-undef": 2,
    "no-void": 0,
    "no-undefined": 2,
    "no-redeclare": "off",
    "@typescript-eslint/no-redeclare": [
      "error"
    ],
    // note you must disable the base rule as it can report incorrect errors
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": false,
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "no-shadow": "off",
    // replaced by ts-eslint rule below
    "@typescript-eslint/no-shadow": 2,
    "@typescript-eslint/ban-types": 2,
    "@typescript-eslint/member-delimiter-style": [
      2,
      {
        "multiline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": false
        }
      }
    ],
    "@typescript-eslint/no-empty-interface": 2,
    "@typescript-eslint/type-annotation-spacing": 2,
    "yoda": [
      2,
      "never"
    ],
    "consistent-return": 2,
    "spaced-line-comment": 0,
    "strict": [
      2,
      "global"
    ],
    "eqeqeq": 2,
    "guard-for-in": 2,
    "no-alert": 2,
    "no-caller": 2,
    "no-labels": 2,
    "no-eval": 2,
    "no-fallthrough": 2,
    "default-case": 2,
    "no-iterator": 2,
    "no-loop-func": 2,
    "no-multi-spaces": 2,
    "no-multi-str": 2,
    "no-new": 2,
    "no-param-reassign": 0,
    "no-proto": 2,
    "no-return-assign": 2,
    "no-self-compare": 2,
    "no-sequences": 2,
    "no-throw-literal": 2,
    "no-unused-expressions": 0,
    "no-with": 2,
    "vars-on-top": 0,
    "valid-typeof": 2,
    "max-statements": [
      1,
      99
    ],
    "max-params": [
      1,
      6
    ],
    "no-var": 2,
    "import/no-unresolved": 2,
    "import/named": 2,
    "import/no-cycle": 0,
    "no-unexpected-multiline": 2,
    "dot-location": [
      2,
      "property"
    ],
    "no-unreachable": 2,
    "no-negated-in-lhs": 2,
    "no-irregular-whitespace": 2,
    "no-invalid-regexp": 2,
    "no-func-assign": 2,
    "no-extra-semi": 2,
    "no-extra-boolean-cast": 0,
    "no-empty": 2,
    "no-duplicate-case": 2,
    "no-dupe-keys": 2,
    "no-dupe-args": 2,
    "no-constant-condition": 2,
    "no-use-before-define": 0,
    "comma-style": [
      2,
      "last"
    ],
    "eol-last": 2,
    "no-lonely-if": 2,
    "jsx-quotes": [
      2,
      "prefer-single"
    ],
    "react/boolean-prop-naming": [
      "error",
      {
        "rule": "^(is|has|should)[A-Z]([A-Za-z0-9]?)+",
        "message": "It is better if your prop ({{ propName }}) matches this pattern: ({{ pattern }})"
      }
    ],
    "react/display-name": 1,
    "react/jsx-boolean-value": 0,
    "react/jsx-no-undef": 2,
    "react/jsx-key": 1,
    "react/jsx-sort-prop-types": 0,
    "react/jsx-sort-props": 0,
    "react/jsx-uses-react": 1,
    "react/jsx-uses-vars": 1,
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".js",
          ".jsx",
          ".tsx"
        ]
      }
    ],
    "react/no-did-mount-set-state": 1,
    "react/no-did-update-set-state": 1,
    "react/no-multi-comp": 1,
    "react/no-unknown-property": 1,
    "react/prop-types": 2,
    "react/react-in-jsx-scope": 1,
    "react/self-closing-comp": 1,
    "react/sort-comp": 2,
    "react/jsx-wrap-multilines": 1,
    "react/prefer-stateless-function": 2,
    "react/prefer-es6-class": [
      2,
      "always"
    ],
    "react/default-props-match-prop-types": [
      1,
      {
        "allowRequiredDefaults": true
      }
    ],
    "react/require-default-props": [
      1,
      {
        "ignoreFunctionalComponents": true
      }
    ],
    "require-yield": 0,
    "generator-star-spacing": 1,
    "object-shorthand": 1,
    "no-await-in-loop": 1,
    "react/forbid-prop-types": 0,
    "no-else-return": 0,
    "import/prefer-default-export": 0,
    "import/no-named-as-default-member": 0,
    "import/no-extraneous-dependencies": [
      2,
      {
        "devDependencies": [
          "**/test/*.js",
          "**/__specs__/*.js",
          "storybook/*.js",
          "**/stories.js"
        ],
        "packageDir": "./"
      }
    ],
    "import/order": [
      2,
      {
        "groups": [
          "builtin",
          "external",
          "internal"
        ],
        "newlines-between": "always"
      }
    ],
    "no-restricted-syntax": 0,
    "no-confusing-arrow": 0,
    "functional/immutable-data": [
      1,
      {
        "ignoreAccessorPattern": [
          "**.defaultProps*.**",
          "**.propTypes*.**",
          "**.navigationOptions*.**",
          "**.exports*.**",
          "**.this*.**",
          "**.global*.**",
          "**.middleware*.**",
          "**.router*.**",
          "**.NativeModules*.**",
          "**.current*.**",
          "**.response*.**",
          "**.request*.**",
          "**.displayName*.**"
        ]
      }
    ]
  },
  "settings": {
    "import/extensions": [
      ".js",
      ".jsx",
      ".ts",
      ".tsx",
      ".mjs"
    ],
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    },
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      },
      "typescript": {
        "alwaysTryTypes": true,
        // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
        "project": "./tsconfig.json"
      }
    }
  }
}
